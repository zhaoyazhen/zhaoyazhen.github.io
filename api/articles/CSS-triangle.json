{"title":"CSS实现三角形的多种方式","uid":"785e956e66b583943c71b60dbc7dba1a","slug":"CSS-triangle","date":"2025-08-20T12:47:22.000Z","updated":"2025-08-21T10:16:51.416Z","comments":true,"path":"api/articles/CSS-triangle.json","keywords":"React、Vue、Uniapp、Nodejs、性能与优化","cover":"./../images/cover.png","content":"<p>日常开发中，我们经常会遇到需要前端手动绘制三角形的场景（比如：后台管理系统开发没有设计稿或者需求紧急等等，懂得都懂），故小编对以往的实现方式进行了总结，以便后续方便使用。</p>\n<h5 id=\"一、边框（border）法-transform-旋转\"><a href=\"#一、边框（border）法-transform-旋转\" class=\"headerlink\" title=\"一、边框（border）法 &#x2F; transform 旋转\"></a>一、边框（border）法 &#x2F; transform 旋转</h5><p>  实现原理：一个元素宽高都为 0，利用 透明边框 和 有色边框 叠加出三角形，如下图：</p>\n  <img src=\"/post/CSS-triangle/CSS-triangle-1.png\" class=\"\">\n\n<p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 箭头向上的三角形</span><br><span class=\"line\">.triangle-up &#123;</span><br><span class=\"line\">  width: 0;</span><br><span class=\"line\">  height: 0;</span><br><span class=\"line\">  border-left: 50px solid transparent;</span><br><span class=\"line\">  border-right: 50px solid transparent;</span><br><span class=\"line\">  border-bottom: 100px solid red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 箭头向右的三角形</span><br><span class=\"line\">.triangle-right &#123;</span><br><span class=\"line\">  width: 0;</span><br><span class=\"line\">  height: 0;</span><br><span class=\"line\">  border-top: 50px solid transparent;</span><br><span class=\"line\">  border-left: 100px solid red;</span><br><span class=\"line\">  border-bottom: 50px solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 箭头向上左的三角形</span><br><span class=\"line\">.triangle-topleft &#123;</span><br><span class=\"line\">  width: 0;</span><br><span class=\"line\">  height: 0;</span><br><span class=\"line\">  border-top: 100px solid red;</span><br><span class=\"line\">  border-right: 100px solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 带阴影效果的三角形（给 border-top 和 border-right 同时设置颜色，然后通过 transform 进行旋转操作，将盒模型原本的两条边作为三角形的腰，对外展示，再对其设置box-shadow效果，实现阴影效果。）</span><br><span class=\"line\">.triangle-shadow &#123; </span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: #fff;</span><br><span class=\"line\">  border: 1px solid #ccc;</span><br><span class=\"line\">  box-shadow: 0 0 4px #ccc;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    display: inline-block;</span><br><span class=\"line\">    top: 86px;</span><br><span class=\"line\">    left: 40px;</span><br><span class=\"line\">    width: 0;</span><br><span class=\"line\">    height: 0;</span><br><span class=\"line\">    content: &#x27;&#x27;;</span><br><span class=\"line\">    border-style: solid;</span><br><span class=\"line\">    border-width: 12px;</span><br><span class=\"line\">    border-color: #fff #fff transparent transparent; // 会形成4个不同颜色的三角形，两个白色的三角形形成一个大的三角形（若三角形颜色与父组件颜色一致，设置一个颜色也可实现三角形）</span><br><span class=\"line\">    transform: rotate(135deg);</span><br><span class=\"line\">    box-shadow: 2px -2px 2px #ccc;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>  优点：简单、性能好（border 边框法支持全浏览器，transform 支持IE9+等）<br>  缺点：形状有限（等腰直角&#x2F;等腰等边）</p>\n<h5 id=\"二、clip-path（裁剪路径）\"><a href=\"#二、clip-path（裁剪路径）\" class=\"headerlink\" title=\"二、clip-path（裁剪路径）\"></a>二、clip-path（裁剪路径）</h5><p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.triangle-clip &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: #3498db;</span><br><span class=\"line\">  clip-path: polygon(50% 0, 0 100%, 100% 100%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>  优点：灵活，可以画任意多边形<br>  缺点：老旧浏览器兼容性差（IE 不支持）</p>\n<h5 id=\"三、渐变（linear-gradient-conic-gradient）\"><a href=\"#三、渐变（linear-gradient-conic-gradient）\" class=\"headerlink\" title=\"三、渐变（linear-gradient &#x2F; conic-gradient）\"></a>三、渐变（linear-gradient &#x2F; conic-gradient）</h5><p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 渐变的透明和不透明部分形成三角（支持 IE9+ 等）</span><br><span class=\"line\">.triangle-linear &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: linear-gradient(135deg, #2ecc71 50%, transparent 50%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 锥形渐变（支持 Chrome 69+，Safari 12.1+，Firefox 83+ 等）</span><br><span class=\"line\">.triangle-conic &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: conic-gradient(#9b59b6 0 120deg, transparent 120deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"四、mask-image\"><a href=\"#四、mask-image\" class=\"headerlink\" title=\"四、mask-image\"></a>四、mask-image</h5><p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 不支持IE，支持 Safari / Chrome 等</span><br><span class=\"line\">.triangle-mask &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: #f39c12;</span><br><span class=\"line\"></span><br><span class=\"line\">  /* 遮罩必须用 image/gradient，不支持 polygon() */</span><br><span class=\"line\">  -webkit-mask-image: linear-gradient(to bottom right, black 50%, transparent 50%);</span><br><span class=\"line\">  -webkit-mask-repeat: no-repeat;</span><br><span class=\"line\">  -webkit-mask-size: 100% 100%;</span><br><span class=\"line\"></span><br><span class=\"line\">  mask-image: linear-gradient(to bottom right, black 50%, transparent 50%);</span><br><span class=\"line\">  mask-repeat: no-repeat;</span><br><span class=\"line\">  mask-size: 100% 100%;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"五、字符符号\"><a href=\"#五、字符符号\" class=\"headerlink\" title=\"五、字符符号\"></a>五、字符符号</h5><p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 支持全浏览器</span><br><span class=\"line\">.triangle-char::before &#123;</span><br><span class=\"line\">  content: &quot;▲&quot;;</span><br><span class=\"line\">  font-size: 60px;</span><br><span class=\"line\">  color: #e67e22;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"六、shape-outside-文字环绕\"><a href=\"#六、shape-outside-文字环绕\" class=\"headerlink\" title=\"六、shape-outside (文字环绕)\"></a>六、shape-outside (文字环绕)</h5><p>  实现代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 不支持 IE ，支持 Chrome / Safari</span><br><span class=\"line\">.float-triangle &#123;</span><br><span class=\"line\">  float: left;</span><br><span class=\"line\">  width: 150px;</span><br><span class=\"line\">  height: 150px;</span><br><span class=\"line\">  shape-outside: polygon(50% 0, 0 100%, 100% 100%);</span><br><span class=\"line\">  clip-path: polygon(50% 0, 0 100%, 100% 100%);</span><br><span class=\"line\">  background: #34495e;</span><br><span class=\"line\">  margin: 0 15px 10px 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.demo-shape p &#123;</span><br><span class=\"line\">  font-size: 14px;</span><br><span class=\"line\">  line-height: 1.6;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"七、SVG-background\"><a href=\"#七、SVG-background\" class=\"headerlink\" title=\"七、SVG + background\"></a>七、SVG + background</h5><p>  严格说不算“纯 CSS”，但可以写在 CSS background-image: url(“data:image&#x2F;svg+xml;…”)，实现三角。</p>\n<h5 id=\"八、Houdini-Paint-API-需浏览器支持\"><a href=\"#八、Houdini-Paint-API-需浏览器支持\" class=\"headerlink\" title=\"八、Houdini Paint API (需浏览器支持)\"></a>八、Houdini Paint API (需浏览器支持)</h5><p>  Houdini Paint API 对于部分同学来说比较陌生，它是 CSS Houdini 家族中最常用的一部分，允许你通过 JavaScript 自定义 CSS 背景绘制，就像给 CSS 增加一个“会编程的 background-image”。本质是通过 JS 注册一个“绘制器（Painter）”，浏览器在绘制时调用它，用 Canvas API 绘制图像。使用示例如下：</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .triangle-houdini &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    background: paint(triangle);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  /* 注册 Houdini Paint Worklet */</span><br><span class=\"line\">  if (&#x27;paintWorklet&#x27; in CSS) &#123;</span><br><span class=\"line\">    const code = `</span><br><span class=\"line\">      class TrianglePainter &#123;</span><br><span class=\"line\">        paint(ctx, size) &#123;</span><br><span class=\"line\">          ctx.fillStyle = &#x27;#16a085&#x27;;</span><br><span class=\"line\">          ctx.beginPath();</span><br><span class=\"line\">          ctx.moveTo(size.width / 2, 0);</span><br><span class=\"line\">          ctx.lineTo(0, size.height);</span><br><span class=\"line\">          ctx.lineTo(size.width, size.height);</span><br><span class=\"line\">          ctx.closePath();</span><br><span class=\"line\">          ctx.fill();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      registerPaint(&#x27;triangle&#x27;, TrianglePainter);</span><br><span class=\"line\">    `;</span><br><span class=\"line\">    const blob = new Blob([code], &#123; type: &#x27;application/javascript&#x27; &#125;);</span><br><span class=\"line\">    const url = URL.createObjectURL(blob);</span><br><span class=\"line\">    CSS.paintWorklet.addModule(url);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>  tips: 目前 Chrome、Edge、Opera 支持好（实验性 API，需要 HTTPS）；Firefox、Safari 支持不完整，需要 flag；移动端支持有限。</p>\n","feature":true,"text":"日常开发中，我们经常会遇到需要前端手动绘制三角形的场景（比如：后台管理系统开发没有设计稿或者需求紧急等等，懂得都懂），故小编对以往的实现方式进行了总结，以便后续...","permalink":"/post/CSS-triangle","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"CSS","slug":"CSS","count":2,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":2,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E8%BE%B9%E6%A1%86%EF%BC%88border%EF%BC%89%E6%B3%95-transform-%E6%97%8B%E8%BD%AC\"><span class=\"toc-text\">一、边框（border）法 &#x2F; transform 旋转</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81clip-path%EF%BC%88%E8%A3%81%E5%89%AA%E8%B7%AF%E5%BE%84%EF%BC%89\"><span class=\"toc-text\">二、clip-path（裁剪路径）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%B8%90%E5%8F%98%EF%BC%88linear-gradient-conic-gradient%EF%BC%89\"><span class=\"toc-text\">三、渐变（linear-gradient &#x2F; conic-gradient）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81mask-image\"><span class=\"toc-text\">四、mask-image</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%AD%97%E7%AC%A6%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">五、字符符号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81shape-outside-%E6%96%87%E5%AD%97%E7%8E%AF%E7%BB%95\"><span class=\"toc-text\">六、shape-outside (文字环绕)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81SVG-background\"><span class=\"toc-text\">七、SVG + background</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81Houdini-Paint-API-%E9%9C%80%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">八、Houdini Paint API (需浏览器支持)</span></a></li></ol>","author":{"name":"YaZhen","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"喜欢深耕知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CSS中filter属性的使用详解","uid":"05578dbc946a53c7742b35135ebdeca1","slug":"CSS-filter","date":"2025-08-21T10:38:40.000Z","updated":"2025-08-25T04:30:47.657Z","comments":true,"path":"api/articles/CSS-filter.json","keywords":"React、Vue、Uniapp、Nodejs、性能与优化","cover":"./../images/cover.png","text":"前一段时间，小编突然接到了一个紧急需求，将公司的线上小程序置为灰色主题，然而项目中没有定义基础颜色变量，且小程序页面有五六十个，额。。。，头疼的不是一点点，后面...","permalink":"/post/CSS-filter","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"CSS","slug":"CSS","count":2,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":2,"path":"api/tags/CSS.json"}],"author":{"name":"YaZhen","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"喜欢深耕知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"使用hexo搭建个人博客","uid":"28b56a6d628adf0e2a41ab59435138a8","slug":"hexo-blog","date":"2025-08-16T08:24:53.000Z","updated":"2025-08-21T06:21:01.249Z","comments":true,"path":"api/articles/hexo-blog.json","keywords":"React、Vue、Uniapp、Nodejs、性能与优化","cover":"./../images/cover.png","text":"Hexo 是一个快速、简洁且高效的静态博客框架，支持丰富的主题和插件，非常适合前端进行个人博客的搭建，以下是小编使用 Hexo 搭建个人博客的步骤记录： 一、安...","permalink":"/post/hexo-blog","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"hexo","slug":"hexo","count":1,"path":"api/categories/hexo.json"}],"tags":[{"name":"博客搭建","slug":"博客搭建","count":1,"path":"api/tags/博客搭建.json"}],"author":{"name":"YaZhen","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"喜欢深耕知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}